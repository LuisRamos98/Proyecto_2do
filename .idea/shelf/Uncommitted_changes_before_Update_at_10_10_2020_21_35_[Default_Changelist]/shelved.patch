Index: app/src/main/java/com/example/proyecto_2do/IngresoProducto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.proyecto_2do;\r\n\r\nimport Entidades.Categoria;\r\nimport Entidades.Producto;\r\nimport android.view.View;\r\nimport android.widget.*;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.os.Bundle;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.JsonObjectRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class IngresoProducto extends AppCompatActivity\r\n        implements Response.Listener<JSONObject>, Response.ErrorListener {\r\n\r\n    private String codigo;\r\n    private int cantidad;\r\n    private double precioUnitario;\r\n    private int idCategoriaSelect;\r\n    private int idIngreso;\r\n\r\n    Categoria categoria = null;\r\n    ArrayList<Categoria> listaCategoria;\r\n    ArrayList<String> listaCategoriaFinal;\r\n    Producto productoSeleccionado = new Producto();\r\n    ArrayList<Producto> listaProducto;\r\n    ArrayList<String> listaProductoFinal;\r\n\r\n    private EditText txtCodigoIngreso, txtPrecioUnitario, txtCantidad;\r\n    private Spinner spCategoria, spNombre;\r\n    private Button btnRegistrar, btnIngresar;\r\n\r\n    RequestQueue requestQueue;\r\n    JsonObjectRequest jsonObjectRequest;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_ingreso_producto);\r\n\r\n        listaCategoria = new ArrayList<>();\r\n        listaProducto = new ArrayList<>();\r\n        requestQueue = Volley.newRequestQueue(this);\r\n\r\n        txtCodigoIngreso = (EditText)findViewById(R.id.txtCodigoIngreso);\r\n        btnRegistrar = (Button)findViewById(R.id.btnRegistrarIngreso);\r\n        btnRegistrar.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                codigo = txtCodigoIngreso.getText().toString();\r\n                if(!codigo.isEmpty()){\r\n                    RegistrarIngreso();\r\n                } else {\r\n                    Toast.makeText(IngresoProducto.this, \"Campo Vacio\\nIntente Nuevamente\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n\r\n        spCategoria = (Spinner)findViewById(R.id.spCategoria);\r\n        spNombre = (Spinner)findViewById(R.id.spNombreProducto);\r\n        txtCantidad = (EditText)findViewById(R.id.txtCantidadEntrada);\r\n        txtPrecioUnitario = (EditText)findViewById(R.id.txtPrecioUnitario);\r\n        btnIngresar = (Button)findViewById(R.id.btnIngresarProducto);\r\n        InhabilitarCampos();\r\n        btnIngresar.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if(!txtPrecioUnitario.getText().toString().isEmpty() && !txtCantidad.getText().toString().isEmpty()){\r\n                    cantidad = Integer.parseInt(txtCantidad.getText().toString());\r\n                    precioUnitario = Double.parseDouble(txtPrecioUnitario.getText().toString());\r\n                    RegistrarIngresoProducto();\r\n                } else {\r\n                    Toast.makeText(IngresoProducto.this, \"Campos Vacios\\nIntente Nuevamente\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void RegistrarIngresoProducto() {\r\n        double valorTotal = cantidad*precioUnitario;\r\n        String url = \"http://\"+MainActivity.IP+\"/BDremota/wsRegistroIngresoProducto.php?empresa=\"+MainActivity.idEmpresa\r\n                +\"&ingreso=\"+idIngreso+\"&producto=\"+productoSeleccionado.getId_Producto()+\"&cantidad=\"+cantidad+\"&pu=\"+precioUnitario+\"&vt=\"+valorTotal;\r\n        url = url.replace(\" \",\"%20\");\r\n        jsonObjectRequest = new JsonObjectRequest(Request.Method.GET, url, null, this, this);\r\n        requestQueue.add(jsonObjectRequest);\r\n    }\r\n\r\n    private void RegistrarIngreso() {\r\n        String url = \"http://\"+MainActivity.IP+\"/BDremota/wsRegistroIngreso.php?empresa=\"+MainActivity.idEmpresa+\"&codigo=\"+codigo;\r\n        url = url.replace(\" \",\"%20\");\r\n        jsonObjectRequest = new JsonObjectRequest(Request.Method.GET, url, null, this, this);\r\n        requestQueue.add(jsonObjectRequest);\r\n    }\r\n\r\n    private void ConsultarCategorias(){\r\n        String url = \"http://\"+MainActivity.IP+\"/BDremota/consultas.php?opcion=5&empresa=\"+MainActivity.idEmpresa;\r\n        url = url.replace(\" \",\"%20\");\r\n        jsonObjectRequest = new JsonObjectRequest(Request.Method.GET, url, null, this, this);\r\n        requestQueue.add(jsonObjectRequest);\r\n    }\r\n\r\n    private void ConsultarProductos() {\r\n        String url = \"http://\"+MainActivity.IP+\"/BDremota/consultas.php?opcion=6&empresa=\"+MainActivity.idEmpresa;\r\n        url = url.replace(\" \",\"%20\");\r\n        jsonObjectRequest = new JsonObjectRequest(Request.Method.GET, url, null, this, this);\r\n        requestQueue.add(jsonObjectRequest);\r\n    }\r\n\r\n    @Override\r\n    public void onResponse(JSONObject response) {\r\n        if(response.has(\"ingreso\")){\r\n            ValidarRegistroIngreso(response);\r\n        } else if(response.has(\"categorias\")){\r\n            CargarCategorias(response);\r\n        } else if(response.has(\"productos\")){\r\n            CargarProductos(response);\r\n        } else if(response.has(\"ingreso_producto\")){\r\n            ValidarRegistroIP(response);\r\n        } else if(response.has(\"producto\")){\r\n            ValidarActualizarDatos(response);\r\n        }\r\n    }\r\n\r\n    private void ValidarActualizarDatos(JSONObject response) {\r\n        int respuesta;\r\n        try {\r\n            JSONArray jsonArray = response.getJSONArray(\"producto\");\r\n            JSONObject jsonObject = jsonArray.getJSONObject(0);\r\n            respuesta = jsonObject.getInt(\"respuesta\");\r\n            switch (respuesta){\r\n                case 1:\r\n                    Toast.makeText(this, \"Datos actualizados\", Toast.LENGTH_SHORT).show();\r\n                    break;\r\n                case 0:\r\n                    Toast.makeText(this, \"No se Pudieron Actualizar los Datos\", Toast.LENGTH_SHORT).show();\r\n                    break;\r\n            }\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n            Toast.makeText(this, e.toString(), Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    private void ValidarRegistroIP(JSONObject response) {\r\n        int respuesta;\r\n        try {\r\n            JSONArray jsonArray = response.getJSONArray(\"ingreso_producto\");\r\n            JSONObject jsonObject = jsonArray.getJSONObject(0);\r\n            respuesta = jsonObject.getInt(\"respuesta\");\r\n            switch (respuesta){\r\n                case 1:\r\n                    Toast.makeText(this, \"Registro Con Exito\", Toast.LENGTH_SHORT).show();\r\n                    txtPrecioUnitario.setText(\"\");\r\n                    txtCantidad.setText(\"\");\r\n                    ObtenerListaProducto();\r\n                    ObtenerListaCategoria();\r\n                    ActualizarDatos();\r\n                    break;\r\n                case 0:\r\n                    Toast.makeText(this, \"Error al Registrar\", Toast.LENGTH_SHORT).show();\r\n                    break;\r\n            }\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n            Toast.makeText(this, e.toString(), Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    private void ActualizarDatos() {\r\n        double cantidadfinal = cantidad+productoSeleccionado.getUnidades();\r\n        double preciofinal = (precioUnitario*cantidad+productoSeleccionado.getPrecio_Total())/cantidadfinal;\r\n        String url = \"http://\"+MainActivity.IP+\"/BDremota/wsActualizarProducto.php?empresa=\"+MainActivity.idEmpresa+\"&producto=\"\r\n                +productoSeleccionado.getId_Producto()+\"&unidades=\"+cantidadfinal+\"&precio=\"+preciofinal+\"&total=\"+(cantidadfinal*preciofinal);\r\n        url = url.replace(\" \",\"%20\");\r\n        jsonObjectRequest = new JsonObjectRequest(Request.Method.GET, url, null, this, this);\r\n        requestQueue.add(jsonObjectRequest);\r\n    }\r\n\r\n    private void ValidarRegistroIngreso(JSONObject response) {\r\n        int respuesta;\r\n        try {\r\n            JSONArray jsonArray = response.getJSONArray(\"ingreso\");\r\n            JSONObject jsonObject = jsonArray.getJSONObject(0);\r\n            respuesta = jsonObject.getInt(\"respuesta\");\r\n            switch (respuesta){\r\n                case 1:\r\n                    Toast.makeText(this, \"Registro Con Exito\", Toast.LENGTH_SHORT).show();\r\n                    idIngreso = jsonObject.getInt(\"id\");\r\n                    HabilitarCampos();\r\n                    ConsultarCategorias();\r\n                    break;\r\n                case 0:\r\n                    Toast.makeText(this, \"Registro ya Existente\\nIntente Nuevamente\", Toast.LENGTH_SHORT).show();\r\n                    break;\r\n                case -1:\r\n                    Toast.makeText(this, \"Error al Registrar\", Toast.LENGTH_SHORT).show();\r\n                    break;\r\n            }\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n            Toast.makeText(this, e.toString(), Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    private void CargarCategorias(JSONObject response) {\r\n        try {\r\n            JSONArray jsonArray= response.getJSONArray(\"categorias\");\r\n            for(int i=0; i<jsonArray.length(); i++){\r\n                categoria = new Categoria();\r\n                JSONObject jsonObject = null;\r\n                jsonObject = jsonArray.getJSONObject(i);\r\n                categoria.setId_Empresa(jsonObject.getInt(\"empresa\"));\r\n                categoria.setId_Categoria(jsonObject.getInt(\"id\"));\r\n                categoria.setNombre_Categoria(jsonObject.getString(\"nombre\"));\r\n                listaCategoria.add(categoria);\r\n            }\r\n            ObtenerListaCategoria();\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n            Toast.makeText(this, e.toString(), Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    private void ObtenerListaCategoria() {\r\n        listaCategoriaFinal = new ArrayList<String>();\r\n        listaCategoriaFinal.add(\"Seleccione\");\r\n        for(int i=0; i<listaCategoria.size(); i++){\r\n            listaCategoriaFinal.add(String.valueOf(listaCategoria.get(i).getId_Categoria())+\" - \"+listaCategoria.get(i).getNombre_Categoria());\r\n        }\r\n        ArrayAdapter<CharSequence> adaptador =\r\n                new ArrayAdapter(this, android.R.layout.simple_spinner_item, listaCategoriaFinal);\r\n        spCategoria.setAdapter(adaptador);\r\n        spCategoria.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n                if(i==0){\r\n                    idCategoriaSelect = -1;\r\n                } else {\r\n                    idCategoriaSelect = listaCategoria.get(i-1).getId_Categoria();\r\n                    ConsultarProductos();\r\n                }\r\n            }\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> adapterView) {}\r\n        });\r\n    }\r\n\r\n    private void CargarProductos(JSONObject response) {\r\n        listaProducto.clear();\r\n        try {\r\n            JSONArray jsonArray= response.getJSONArray(\"productos\");\r\n            for(int i=0; i<jsonArray.length(); i++){\r\n                Producto producto = new Producto();\r\n                JSONObject jsonObject = null;\r\n                jsonObject = jsonArray.getJSONObject(i);\r\n                if(jsonObject.getInt(\"categoria\")==idCategoriaSelect){\r\n                    producto.setId_Empresa(jsonObject.getInt(\"empresa\"));\r\n                    producto.setCodigo_Producto(jsonObject.getString(\"codigo\"));\r\n                    producto.setId_Producto(jsonObject.getInt(\"id\"));\r\n                    producto.setId_Estado(jsonObject.getInt(\"estado\"));\r\n                    producto.setNombre_Producto(jsonObject.getString(\"nombre\"));\r\n                    producto.setId_Medida(jsonObject.getInt(\"medida\"));\r\n                    producto.setCategoria(jsonObject.getInt(\"categoria\"));\r\n                    producto.setUnidades(jsonObject.getInt(\"unidades\"));\r\n                    producto.setPrecio_Unitario(jsonObject.getDouble(\"pu\"));\r\n                    producto.setPrecio_Total(jsonObject.getDouble(\"pt\"));\r\n                    listaProducto.add(producto);\r\n                }\r\n            }\r\n            ObtenerListaProducto();\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n            Toast.makeText(this, e.toString(), Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    private void ObtenerListaProducto() {\r\n        listaProductoFinal = new ArrayList<String>();\r\n        listaProductoFinal.add(\"Seleccione\");\r\n        for(int i=0; i<listaProducto.size(); i++){\r\n            listaProductoFinal.add(listaProducto.get(i).getNombre_Producto());\r\n        }\r\n        ArrayAdapter<CharSequence> adaptador =\r\n                new ArrayAdapter(this, android.R.layout.simple_spinner_item, listaProductoFinal);\r\n        spNombre.setAdapter(adaptador);\r\n        spNombre.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n                if(i==0){\r\n                    productoSeleccionado.setId_Producto(-1);\r\n                } else {\r\n                    productoSeleccionado = listaProducto.get(i-1);\r\n                }\r\n            }\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> adapterView) {}\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onErrorResponse(VolleyError error) {\r\n        Toast.makeText(this, \"Error: \"+error.toString(), Toast.LENGTH_SHORT).show();\r\n    }\r\n    private void HabilitarCampos(){\r\n        spCategoria.setEnabled(true);\r\n        spNombre.setEnabled(true);\r\n        txtPrecioUnitario.setEnabled(true);\r\n        txtCantidad.setEnabled(true);\r\n        btnIngresar.setEnabled(true);\r\n        txtCodigoIngreso.setEnabled(false);\r\n        btnRegistrar.setEnabled(false);\r\n    }\r\n    private void InhabilitarCampos(){\r\n        spCategoria.setEnabled(false);\r\n        spNombre.setEnabled(false);\r\n        txtPrecioUnitario.setEnabled(false);\r\n        txtCantidad.setEnabled(false);\r\n        btnIngresar.setEnabled(false);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/proyecto_2do/IngresoProducto.java	(revision 965ae4c25e5594fc2617a4f31e20487ebdcdf769)
+++ app/src/main/java/com/example/proyecto_2do/IngresoProducto.java	(date 1602383296603)
@@ -22,12 +22,14 @@
 public class IngresoProducto extends AppCompatActivity
         implements Response.Listener<JSONObject>, Response.ErrorListener {
 
+    //variables de la activity
     private String codigo;
     private int cantidad;
     private double precioUnitario;
     private int idCategoriaSelect;
     private int idIngreso;
 
+    //arreglos para mostrar la informacion en el spinner
     Categoria categoria = null;
     ArrayList<Categoria> listaCategoria;
     ArrayList<String> listaCategoriaFinal;
@@ -35,10 +37,12 @@
     ArrayList<Producto> listaProducto;
     ArrayList<String> listaProductoFinal;
 
+    //variables de la activity
     private EditText txtCodigoIngreso, txtPrecioUnitario, txtCantidad;
     private Spinner spCategoria, spNombre;
     private Button btnRegistrar, btnIngresar;
 
+    //Objetos que permiten la conexion con los webService
     RequestQueue requestQueue;
     JsonObjectRequest jsonObjectRequest;
 
@@ -49,13 +53,16 @@
 
         listaCategoria = new ArrayList<>();
         listaProducto = new ArrayList<>();
+        //Instancia del objeto para la conexion remota
         requestQueue = Volley.newRequestQueue(this);
-
+        //relacion logica-grafica
         txtCodigoIngreso = (EditText)findViewById(R.id.txtCodigoIngreso);
         btnRegistrar = (Button)findViewById(R.id.btnRegistrarIngreso);
+        //modificar el evento click
         btnRegistrar.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
+                //validamos que los campos no se encuentren vacios para poder registrar
                 codigo = txtCodigoIngreso.getText().toString();
                 if(!codigo.isEmpty()){
                     RegistrarIngreso();
@@ -64,16 +71,19 @@
                 }
             }
         });
-
+        //relacion logica-grafica
         spCategoria = (Spinner)findViewById(R.id.spCategoria);
         spNombre = (Spinner)findViewById(R.id.spNombreProducto);
         txtCantidad = (EditText)findViewById(R.id.txtCantidadEntrada);
         txtPrecioUnitario = (EditText)findViewById(R.id.txtPrecioUnitario);
         btnIngresar = (Button)findViewById(R.id.btnIngresarProducto);
+        //llamada a la funcion para inhabilitar campos
         InhabilitarCampos();
+        //modificar el evento click
         btnIngresar.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
+                //validamos que los campos no se encuentren vacios para poder registrar
                 if(!txtPrecioUnitario.getText().toString().isEmpty() && !txtCantidad.getText().toString().isEmpty()){
                     cantidad = Integer.parseInt(txtCantidad.getText().toString());
                     precioUnitario = Double.parseDouble(txtPrecioUnitario.getText().toString());
@@ -85,7 +95,9 @@
         });
     }
 
+    //metodo para llamar al ws y registrar la accion de ingresar producto
     private void RegistrarIngresoProducto() {
+        //llamada al WebService para registrar los datos, la respuesta la devolvera en el Onresponse()
         double valorTotal = cantidad*precioUnitario;
         String url = "http://"+MainActivity.IP+"/BDremota/wsRegistroIngresoProducto.php?empresa="+MainActivity.idEmpresa
                 +"&ingreso="+idIngreso+"&producto="+productoSeleccionado.getId_Producto()+"&cantidad="+cantidad+"&pu="+precioUnitario+"&vt="+valorTotal;
@@ -94,29 +106,37 @@
         requestQueue.add(jsonObjectRequest);
     }
 
+    //metodo para llamar al ws y registrar la accion de ingreso
     private void RegistrarIngreso() {
+        //llamada al WebService para registrar los datos, la respuesta la devolvera en el Onresponse()
         String url = "http://"+MainActivity.IP+"/BDremota/wsRegistroIngreso.php?empresa="+MainActivity.idEmpresa+"&codigo="+codigo;
         url = url.replace(" ","%20");
         jsonObjectRequest = new JsonObjectRequest(Request.Method.GET, url, null, this, this);
         requestQueue.add(jsonObjectRequest);
     }
 
+    //metodo para llamar al ws y consultar las categorias
     private void ConsultarCategorias(){
+        //llamada al WebService para registrar los datos, la respuesta la devolvera en el Onresponse()
         String url = "http://"+MainActivity.IP+"/BDremota/consultas.php?opcion=5&empresa="+MainActivity.idEmpresa;
         url = url.replace(" ","%20");
         jsonObjectRequest = new JsonObjectRequest(Request.Method.GET, url, null, this, this);
         requestQueue.add(jsonObjectRequest);
     }
 
+    //metodo para llamar al ws y consultar los productos
     private void ConsultarProductos() {
+        //llamada al WebService para registrar los datos, la respuesta la devolvera en el Onresponse()
         String url = "http://"+MainActivity.IP+"/BDremota/consultas.php?opcion=6&empresa="+MainActivity.idEmpresa;
         url = url.replace(" ","%20");
         jsonObjectRequest = new JsonObjectRequest(Request.Method.GET, url, null, this, this);
         requestQueue.add(jsonObjectRequest);
     }
 
+    //metodo donde trataremos las respuestas del WebService
     @Override
     public void onResponse(JSONObject response) {
+        //preguntamos si la respuesra es la que deseamos obtener
         if(response.has("ingreso")){
             ValidarRegistroIngreso(response);
         } else if(response.has("categorias")){
@@ -130,12 +150,17 @@
         }
     }
 
+    //valida que respuesta de la consulta nos devuelve el ws
     private void ValidarActualizarDatos(JSONObject response) {
         int respuesta;
         try {
+            //obtenemos el objeto jsonArray del objeto que nos responde el ws
             JSONArray jsonArray = response.getJSONArray("producto");
+            //obtenemos el primer elemento del arreglo
             JSONObject jsonObject = jsonArray.getJSONObject(0);
+            //obtenemos el dato cuya clave sea respuesta
             respuesta = jsonObject.getInt("respuesta");
+            //validamos la respuesta
             switch (respuesta){
                 case 1:
                     Toast.makeText(this, "Datos actualizados", Toast.LENGTH_SHORT).show();
@@ -306,6 +331,7 @@
         });
     }
 
+    //metodo donde se muestra la respuesta en caso de fallar la llamada al ws
     @Override
     public void onErrorResponse(VolleyError error) {
         Toast.makeText(this, "Error: "+error.toString(), Toast.LENGTH_SHORT).show();
Index: app/src/main/java/com/example/proyecto_2do/Kardex.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.proyecto_2do;\r\n\r\nimport Entidades.Categoria;\r\nimport Entidades.Producto;\r\nimport android.widget.*;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.database.Cursor;\r\nimport android.os.Bundle;\r\nimport android.provider.ContactsContract;\r\nimport android.view.View;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.JsonObjectRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class Kardex extends AppCompatActivity\r\n        implements Response.Listener<JSONObject>, Response.ErrorListener {\r\n\r\n    RequestQueue requestQueue;\r\n    JsonObjectRequest jsonObjectRequest;\r\n\r\n    Categoria categoria = null;\r\n    int idCategoriaSelect;\r\n\r\n    ArrayList<Producto> listaProducto;\r\n    ArrayList<Categoria> listaCategoria;\r\n    ArrayList<String> listaCategoriaFinal;\r\n\r\n    private TableLayout tableLayout;\r\n    private String[] header ={\"Categoria\",\"Producto\",\"Cantidad\",\"Precio Unitario\", \"Total\"};\r\n    private ArrayList<String[]> rows = new ArrayList<>();\r\n    private TableDinamic tableDinamic;\r\n\r\n    private Spinner spCategoria;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_kardex);\r\n\r\n        spCategoria = (Spinner)findViewById(R.id.spCategoriaKardex);\r\n\r\n        listaProducto = new ArrayList<>();\r\n        listaCategoria = new ArrayList<>();\r\n        requestQueue = Volley.newRequestQueue(this);\r\n\r\n        //DECLARACION Y ASIGNACION DE VARIABLES\r\n        tableLayout = (TableLayout)findViewById(R.id.tabledinamic);\r\n\r\n        tableDinamic = new TableDinamic(tableLayout, getApplicationContext());\r\n        tableDinamic.addHeader(header);\r\n        tableDinamic.addData(ObtenerListaProducto());\r\n        ConsultarCategorias();\r\n    }\r\n\r\n    //FUNCION QUE MUESTRA EN UNA TABLA LOS CLIENTES\r\n    public void MostrarContact (View view){\r\n        tableDinamic.addData(ObtenerListaProducto());\r\n    }\r\n\r\n    //FUNCION QUE ADQUIERE Y CREA LA TABLA DE CONTACTOS\r\n    private ArrayList<String[]> ObtenerListaProducto(){\r\n        //rows.add(new String[]{\"1\",\"pedro\",\"lopez\",\"persona\",\"user\"});\r\n        for(int i=0; i<listaProducto.size(); i++){\r\n            rows.add(new String[]{String.valueOf(listaProducto.get(i).getCategoria()), listaProducto.get(i).getNombre_Producto(),\r\n                    String.valueOf(listaProducto.get(i).getUnidades()),String.valueOf(listaProducto.get(i).getPrecio_Unitario()),\r\n                    String.valueOf(listaProducto.get(i).getPrecio_Total())});\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    private void ConsultarProductos() {\r\n        String url = \"http://\"+MainActivity.IP+\"/BDremota/consultas.php?opcion=6&empresa=\"+MainActivity.idEmpresa;\r\n        url = url.replace(\" \",\"%20\");\r\n        jsonObjectRequest = new JsonObjectRequest(Request.Method.GET, url, null, this, this);\r\n        requestQueue.add(jsonObjectRequest);\r\n    }\r\n\r\n    private void ConsultarCategorias(){\r\n        String url = \"http://\"+MainActivity.IP+\"/BDremota/consultas.php?opcion=5&empresa=\"+MainActivity.idEmpresa;\r\n        url = url.replace(\" \",\"%20\");\r\n        jsonObjectRequest = new JsonObjectRequest(Request.Method.GET, url, null, this, this);\r\n        requestQueue.add(jsonObjectRequest);\r\n    }\r\n\r\n    @Override\r\n    public void onErrorResponse(VolleyError error) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onResponse(JSONObject response) {\r\n        if(response.has(\"productos\")){\r\n            CargarProductos(response);\r\n        } else if(response.has(\"categorias\")){\r\n            CargarCategorias(response);\r\n        }\r\n    }\r\n\r\n    private void CargarCategorias(JSONObject response) {\r\n        try {\r\n            JSONArray jsonArray= response.getJSONArray(\"categorias\");\r\n            for(int i=0; i<jsonArray.length(); i++){\r\n                categoria = new Categoria();\r\n                JSONObject jsonObject = null;\r\n                jsonObject = jsonArray.getJSONObject(i);\r\n                categoria.setId_Empresa(jsonObject.getInt(\"empresa\"));\r\n                categoria.setId_Categoria(jsonObject.getInt(\"id\"));\r\n                categoria.setNombre_Categoria(jsonObject.getString(\"nombre\"));\r\n                listaCategoria.add(categoria);\r\n            }\r\n            ObtenerListaCategoria();\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n            Toast.makeText(this, e.toString(), Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    private void CargarProductos(JSONObject response) {\r\n        listaProducto.clear();\r\n        try {\r\n            JSONArray jsonArray= response.getJSONArray(\"productos\");\r\n            for(int i=0; i<jsonArray.length(); i++){\r\n                Producto producto = new Producto();\r\n                JSONObject jsonObject = null;\r\n                jsonObject = jsonArray.getJSONObject(i);\r\n                if(jsonObject.getInt(\"categoria\")==idCategoriaSelect){\r\n                    producto.setId_Empresa(jsonObject.getInt(\"empresa\"));\r\n                    producto.setCodigo_Producto(jsonObject.getString(\"codigo\"));\r\n                    producto.setId_Producto(jsonObject.getInt(\"id\"));\r\n                    producto.setId_Estado(jsonObject.getInt(\"estado\"));\r\n                    producto.setNombre_Producto(jsonObject.getString(\"nombre\"));\r\n                    producto.setId_Medida(jsonObject.getInt(\"medida\"));\r\n                    producto.setCategoria(jsonObject.getInt(\"categoria\"));\r\n                    producto.setUnidades(jsonObject.getInt(\"unidades\"));\r\n                    producto.setPrecio_Unitario(jsonObject.getDouble(\"pu\"));\r\n                    producto.setPrecio_Total(jsonObject.getDouble(\"pt\"));\r\n                    listaProducto.add(producto);\r\n                }\r\n            }\r\n            ObtenerListaProducto();\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n            Toast.makeText(this, e.toString(), Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    /*private void ObtenerListaProducto() {\r\n        listaProductoFinal = new ArrayList<String>();\r\n        listaProductoFinal.add(\"Seleccione\");\r\n        for(int i=0; i<listaProducto.size(); i++){\r\n            listaProductoFinal.add(listaProducto.get(i).getNombre_Producto());\r\n        }\r\n        ArrayAdapter<CharSequence> adaptador =\r\n                new ArrayAdapter(this, android.R.layout.simple_spinner_item, listaProductoFinal);\r\n        spNombre.setAdapter(adaptador);\r\n        spNombre.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n                if(i==0){\r\n                    productoSeleccionado.setId_Producto(-1);\r\n                } else {\r\n                    productoSeleccionado = listaProducto.get(i-1);\r\n                }\r\n            }\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> adapterView) {}\r\n        });\r\n    }*/\r\n\r\n    private void ObtenerListaCategoria() {\r\n        listaCategoriaFinal = new ArrayList<String>();\r\n        listaCategoriaFinal.add(\"Seleccione\");\r\n        for(int i=0; i<listaCategoria.size(); i++){\r\n            listaCategoriaFinal.add(String.valueOf(listaCategoria.get(i).getId_Categoria())+\" - \"+listaCategoria.get(i).getNombre_Categoria());\r\n        }\r\n        ArrayAdapter<CharSequence> adaptador =\r\n                new ArrayAdapter(this, android.R.layout.simple_spinner_item, listaCategoriaFinal);\r\n        spCategoria.setAdapter(adaptador);\r\n        spCategoria.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n                if(i==0){\r\n                    idCategoriaSelect = -1;\r\n                } else {\r\n                    idCategoriaSelect = listaCategoria.get(i-1).getId_Categoria();\r\n                    ConsultarProductos();\r\n                }\r\n            }\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> adapterView) {}\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/proyecto_2do/Kardex.java	(revision 965ae4c25e5594fc2617a4f31e20487ebdcdf769)
+++ app/src/main/java/com/example/proyecto_2do/Kardex.java	(date 1602383296461)
@@ -68,7 +68,6 @@
 
     //FUNCION QUE ADQUIERE Y CREA LA TABLA DE CONTACTOS
     private ArrayList<String[]> ObtenerListaProducto(){
-        //rows.add(new String[]{"1","pedro","lopez","persona","user"});
         for(int i=0; i<listaProducto.size(); i++){
             rows.add(new String[]{String.valueOf(listaProducto.get(i).getCategoria()), listaProducto.get(i).getNombre_Producto(),
                     String.valueOf(listaProducto.get(i).getUnidades()),String.valueOf(listaProducto.get(i).getPrecio_Unitario()),
Index: app/src/main/java/com/example/proyecto_2do/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.proyecto_2do;\r\n\r\nimport Entidades.Empresa;\r\nimport android.widget.*;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.ClipData;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.JsonObjectRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\n\r\n\r\npublic class MainActivity extends AppCompatActivity\r\n        implements Response.Listener<JSONObject>, Response.ErrorListener {\r\n\r\n    //variables de la activity\r\n    public static int idEmpresa = 0;\r\n    public static String IP = \"192.168.1.7\";\r\n    private Button login;\r\n    private EditText txtUser, txtPass;\r\n    Spinner sp_Empresas;\r\n    private Empresa empresa = null;\r\n    //arreglos para mostrar la informacion en el spinner\r\n    private ArrayList<Empresa> listaEmpresas;\r\n    private ArrayList<String> listafinal;\r\n    //Objetos que permiten la conexion con los webService\r\n    RequestQueue requestQueue;\r\n    JsonObjectRequest jsonObjectRequest;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        listaEmpresas = new ArrayList<>();\r\n        //Instancia del objeto para la conexion remota\r\n        requestQueue = Volley.newRequestQueue(this);\r\n        //relacion logica-grafica\r\n        login = (Button)findViewById(R.id.btn_login);\r\n        txtUser = (EditText)findViewById(R.id.txtUser);\r\n        txtPass = (EditText)findViewById(R.id.txtPass);\r\n        sp_Empresas = (Spinner)findViewById(R.id.spEmpresa);\r\n        //llamada a metodo para cargar en el spiner las empresas\r\n        ConsultarEmpresas();\r\n        //modificar el evento click\r\n        login.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //llamada al metodo para validar los datos en el login\r\n                Validarusuario();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void ConsultarEmpresas() {\r\n        //llamada al WebService\r\n        String url = \"http://\"+IP+\"/BDremota/consultas.php?empresa=\"+MainActivity.idEmpresa+\"&opcion=1\";\r\n        url = url.replace(\" \",\"%20\");\r\n        jsonObjectRequest = new JsonObjectRequest(Request.Method.GET, url, null, this, this);\r\n        requestQueue.add(jsonObjectRequest);\r\n    }\r\n\r\n    private void Validarusuario() {\r\n        String user, pass;\r\n        //validamos que primero haya escogido una empresa antes de proceder a validar\r\n        if(idEmpresa != 0 ){\r\n            user = txtUser.getText().toString();\r\n            pass = txtPass.getText().toString();\r\n            if(!user.isEmpty() && !pass.isEmpty()){\r\n                String url = \"http://\"+IP+\"/BDremota/consultas.php?opcion=3&empresa=\"+idEmpresa+\"&usuario=\"+user+\"&pass=\"+pass;\r\n                url = url.replace(\" \",\"%20\");\r\n                //llamada al WebService\r\n                jsonObjectRequest = new JsonObjectRequest(Request.Method.GET, url, null, this, this);\r\n                requestQueue.add(jsonObjectRequest);\r\n            } else {\r\n                Toast.makeText(this, \"Ingrese los Campos\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        } else {\r\n            Toast.makeText(this, \"Seleccione Una Empresa Por Favor\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onErrorResponse(VolleyError error) {\r\n    }\r\n\r\n    //metodo donde trataremos las respuestas del WebService\r\n    @Override\r\n    public void onResponse(JSONObject response) {\r\n        if(response.has(\"empresa\")) {\r\n            CargarEmpresas(response);\r\n        } else if(response.has(\"Usuario\")){\r\n            ValidarRespuestaUsuario(response);\r\n        }\r\n    }\r\n\r\n    private void ValidarRespuestaUsuario(JSONObject response) {\r\n        try{\r\n            //validar los datos deusario para el inicio de sesion\r\n            JSONArray json = response.getJSONArray(\"Usuario\");\r\n            JSONObject jsonObject = json.getJSONObject(0);\r\n            int id = jsonObject.getInt(\"id\");\r\n            if(id != 0){\r\n                Intent sgt = new Intent(getApplicationContext(), Navegacion.class);\r\n                startActivity(sgt);\r\n                Toast.makeText(this, \"Bienvenido\", Toast.LENGTH_SHORT).show();\r\n                this.finish();\r\n            } else {\r\n                Toast.makeText(this, \"Datos Erroneos\\nIntente Nuevamente\", Toast.LENGTH_SHORT).show();\r\n                txtUser.setText(\"\");\r\n                txtPass.setText(\"\");\r\n            }\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n            Toast.makeText(this, e.toString(), Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    private void CargarEmpresas(JSONObject response){\r\n        try{\r\n            //Obtenemos el objeto JSONArray del objeto response que nos devuelve el WS\r\n            JSONArray json = response.getJSONArray(\"empresa\");\r\n            //recorremos el arreglo y obtenemos los datos\r\n            for (int i = 0; i < json.length(); i++) {\r\n                empresa = new Empresa();\r\n                JSONObject jsonObject = null;\r\n                jsonObject = json.getJSONObject(i);\r\n                empresa.setIdEmpresa(jsonObject.getInt(\"id\"));\r\n                empresa.setRucEmpresa(jsonObject.optString(\"ruc\"));\r\n                empresa.setNombreEmpresa(jsonObject.optString(\"nombre\"));\r\n                listaEmpresas.add(empresa);\r\n            }\r\n            //llamada al metodo para llenar el spinner\r\n            ObtenerLista();\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n            Toast.makeText(this, e.toString(), Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    private void ObtenerLista() {\r\n        listafinal = new ArrayList<String>();\r\n        listafinal.add(\"Seleccione\");\r\n        for(int i=0; i<listaEmpresas.size(); i++){\r\n            listafinal.add(listaEmpresas.get(i).getNombreEmpresa());\r\n        }\r\n        ArrayAdapter<CharSequence> adaptador = new ArrayAdapter(this, android.R.layout.simple_spinner_item, listafinal);\r\n        sp_Empresas.setAdapter(adaptador);\r\n        sp_Empresas.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n                if(i!=0){\r\n                    idEmpresa = listaEmpresas.get(i-1).getIdEmpresa();\r\n                }\r\n            }\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> adapterView) {\r\n            }\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/proyecto_2do/MainActivity.java	(revision 965ae4c25e5594fc2617a4f31e20487ebdcdf769)
+++ app/src/main/java/com/example/proyecto_2do/MainActivity.java	(date 1602383296700)
@@ -90,13 +90,14 @@
         }
     }
 
+    //metodo donde se muestra la respuesta en caso de fallar la llamada al ws
     @Override
-    public void onErrorResponse(VolleyError error) {
-    }
+    public void onErrorResponse(VolleyError error) {}
 
     //metodo donde trataremos las respuestas del WebService
     @Override
     public void onResponse(JSONObject response) {
+        //preguntamos si la respuesra es la que deseamos obtener
         if(response.has("empresa")) {
             CargarEmpresas(response);
         } else if(response.has("Usuario")){
